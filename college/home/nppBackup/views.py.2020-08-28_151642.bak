from django.shortcuts import render,HttpResponse,redirect
from django.contrib.auth.models import User
from django.contrib.auth import logout, authenticate, login
import random
from .models import Toc
import pandas as pd
from django.http import FileResponse
from datetime import date
import mysql.connector
import pandas as pd
mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  password="aayush",
  database="second_year")



# Create your views here.
def loginpage(request):
#    #return HttpResponse('This is my homepage')
        return redirect("/login")

#def demo(request):
 #  if request.user_type == "admin":
  #       return render(request,'about.html')
   #if user_type == "student":
    #return HttpResponse('This is my student')
    #    return render(request,'student.html')
   #if request.user_type == "faculty":
    #return HttpResponse('This is my faculty')             
    #     return render(request,'faculty.html')
     
        
def about(request):
    #return HttpResponse('This is my about')
    return render(request,'about.html')
def student_attendence(request):
    obj = Maths.objects.all()
    df = pd.DataFrame(obj.values())
    table = []
    for i in range(len(df)):
        table.append((df['roll_no'].iloc[i],df['name'].iloc[i],df['attendence'].iloc[i]))
    context = {'table' :table}
    return render(request,'student_attendence.html',context)
def loginUser(request):
    if request.method=="POST":
        username = request.POST.get('username')
        password = request.POST.get('password')
        user_type = request.POST.get('user_type')
        context={'username':username}
        # check if user has entered correct credentials
        user = authenticate(username=username, password=password)
        if user is not None:
            # A backend authenticated the credentials
            if user_type == "admin":
                #login(request, user)
                return redirect("/admin",)
            elif user_type == "faculty":
                login(request, user)
                return redirect("/facultyattendence")
            elif user_type == "student":
                login(request, user)
                return redirect("/studentattendence")

        else:
            context={'error':'Wrong username or password !'}
            return render(request, 'login.html',context)

    return render(request, 'login.html')

def logoutUser(request):
    logout(request)
    return redirect("/login")

def faculty_attendence(request):
    obj = Toc.objects.all()
    df = pd.DataFrame(obj.values())
    table = []
    for i in range(len(df)):
        table.append((df['roll_no'].iloc[i],df['name'].iloc[i]))
    today = date.today()
    context = {'table' :table ,'date':today}
    return render(request,'faculty_attendence.html',context)

def attendence_taken(request):
    #print(list(request.POST.values()))
    obj = Toc.objects
    att = list(request.POST.values())[1:]
    roll = list(request.POST.keys())[1:]
    today = date.today()
    date_string = today.strftime("%B_%d_%Y")
    mycursor = mydb.cursor()
    mycursor.execute("SELECT * FROM TOC;")
    print(Toc.objects.field)
    for i in range(len(roll)):
        if att[i]:
            TOC.objects.filter(roll_no=roll[i]).update(attendence=att[i].upper())
    return render(request,'attendence_taken.html')
    
def download(request):
    obj = Maths.objects.all()
    df = pd.DataFrame(obj.values())
    df.to_excel("Download.xlsx",index = False)
    path = "Download.xlsx"
    with open(path, 'rb') as pdf:
        data = pdf.read()
        response =  HttpResponse(data, content_type='application/ms-excel charset=utf-8')
        response["Content-Length"] = len(data)
        response['Content-Disposition'] = 'attachment;filename=Download.xlsx' 
    #response = FileResponse(open("Download.txt", 'rb'))
    return response